# Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево.
# К тому же ведьмак не принимает купюры, он принимает только чеканные монеты.
# В мире ведьмака существуют монеты с номиналами 1,5,10,25.
#
# Напишите программу, которая определяет, какое минимальное количество чеканных монет нужно заплатить ведьмаку.
#
# Формат входных данных
# На вход программе подается одно натуральное число - цена за услугу ведьмака.
#
# Формат выходных данных
# Программа должна вывести минимально возможное количество чеканных монет для оплаты.
#



num = int(input())
count = 0

while num >= 25:
    count += 1
    num = num - 25
while num >= 10:
    count += 1
    num -= 10
while num >= 5:
    count += 1
    num -= 5
while num >= 1:
    count += 1
    num = num - 1

print(count)

#

#Интересная задачка.

#1. Первым шагом прописываем число, которое подается на входе, допустим это будет n.

#2. Вторым шагом прописываем начальное значение счетчика counter=0

#3. Третьим шагом делаем следующее (пока-это while):

#Пока n>=25:

#    counter+=1

##    n=n-25

#4. Четвертым шагом прописываем тоже самое, только для тех чисел, которые меньше 25,
# но больше 10 или равны 10.
#
#Пока n>=10:
#
#Пока n>=5:
#    counter+=1
#
#Пока n>=1:

#    counter+=1

#    n=n-1

#7. И седьмым пунктом выводим counter



###К примеру, на входе подается число 49. Наша программа вначале посмотрит (третий пункт): 49>=25?
# Да, следовательно он к начальному counter=0 прибавит единичку, а из 49 отнимет 25 и останется у нас 24.

#Потом, наша программа опять посмотрит 24>=25? Нет, значит перейдем к четвертому пункту.

#В четвертом пункте он задастся вопросом 24>=10? Да, следовательно он к counter равному уже единичке прибавит еще одну единичку и станет counter=2, а из 24 отнимет 10 и останется у нас 14.

#Потом, наша программа опять посмотрит 14>=10? Да, следовательно он к counter равному уже 2 прибавит еще одну единичку и станет counter=3, а из 14 отнимет 10 и останется у нас 4.

#Потом, наша программа опять посмотрит 4>=10? Нет, значит перейдем к пятому пункту.

#В пятом пункте он задастся вопросом 4>=5? Нет, значит перейдем к шестому пункту.

#В шестом пункте он задастся вопросом 4>=1? Да, следовательно он к counter равному уже тройке прибавит еще одну единичку и станет counter=4, а из 4 отнимет 1 и останется у нас 3.

#Потом, наша программа опять посмотрит 3>=1? Да, следовательно он к counter равному уже четверке прибавит еще одну единичку и станет counter=5, а из 3 отнимет 1 и останется у нас 2.

#Потом, наша программа опять посмотрит 2>=1? Да, следовательно он к counter равному уже пятерке прибавит еще одну единичку и станет counter=6, а из 2 отнимет 1 и останется у нас 1.

#Потом, наша программа опять посмотрит 1>=1? Да, следовательно он к counter равному уже шестерке прибавит еще одну единичку и станет counter=7, а из 1 отнимет 1 и останется у нас 0. Ура-мы довели наше число до нуля: 49=25+10+10+1+1+1+1. Итого у нас получилось семь слагаемых, то есть couter равен 7.

#И последним седьмым пунктом выводим эту семерку, то есть print(counter).


